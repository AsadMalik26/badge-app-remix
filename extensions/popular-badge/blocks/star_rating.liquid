{% comment %}using x-data: you define the component{% endcomment %}
<div class="wishlist-inspire__icon" x-data="wishlist">
  <button type="button" @click.debounce="addToWishlist()">
    {% comment %}:fill - here colon before property defines it will be dynamic so it can take value of variable "wishlisted" to assign the value{% endcomment %}
    <svg
      class="wishlist-inspire__icon--svg"
      viewBox="0 0 24 24"
      stroke-width="2"
      stroke="#000"
      :fill="wishlisted ? 'red' : '#fff'"
    >
      <path d="M12 21.35l-1.45-1.32C5.4 15.73 2 12.27 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.77-3.4 7.23-8.55 11.53L12 21.35z"/>
    </svg>
    {% if block.settings.text != blank %}
      <span class="wishlist-inspire__icon--text">{{ block.settings.text }}</span>
    {% endif %}
  </button>
</div>

<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>

<script>
  document.addEventListener('alpine:init', () => {
    // Alpine.data: this is how you create a component - here "wishlist" is the name of component
    Alpine.data('wishlist', () => ({
      BASE_URL: 'https://infections-pix-seas-renewal.trycloudflare.com/',
      {% comment %} BASE_URL: '{{ shop.metafields.badge_app.application_url }}', {% endcomment %}
      wishlisted: false, // this is the variable

      init(){
        const formdata = new FormData();
        formdata.append("shop", "{{ shop.permanent_domain }}");
        formdata.append("customerId", '{{ customer.id }}');
        formdata.append("productId", "{{ product.id }}");

        const requestOptions = {
          method: "GET",
          body: formdata,
          redirect: "follow"
        };

        fetch(`${this.BASE_URL}api/wishlist/?shop={{shop.permanent_domain}}&customerId={{customer.id}}&productId={{product.id}}`)
          .then((response) => response.json())
          .then((result) => {
            console.log({result}, 'init result')
            if(result?.data?.length){
              this.wishlisted = true
            } else {
              this.wishlisted = false
            }
          })
          .catch((error) => console.error(error));
      },
      //  this is the method of component
      addToWishlist() {
        console.log('whish list here')
        // this.wishlisted = ! this.wishlisted
      //   TODO: send data to the database
      //   if customer is not logged in then show him an alert
        {% unless customer %}
          alert('Please login to add to the wishlist')
          return
        {% endunless %}
        {% comment %} this is how it is work in liquid files {% endcomment %}
        let shopDomain = "{{ shop.permanent_domain }}"
        
        const formdata = new FormData();
        formdata.append("shop", "{{ shop.permanent_domain }}");
        formdata.append("customerId", '{{ customer.id }}');
        formdata.append("productId", "{{ product.id }}");
        if(this.wishlisted){
          formdata.append("_action", "DELETE");
        }
        const requestOptions = {
          method: "POST",
          body: formdata,
          redirect: "follow"
        };

        fetch(this.BASE_URL + "api/wishlist/", requestOptions)
          .then((response) => response.json())
          .then((result) => {
            this.wishlisted = result?.wishlisted ?? false;
          })
          .catch((error) => console.error(error));
      },
    }))
  })
</script>

<style>
  .wishlist-inspire__icon {
    display: flex;
    justify-content: center;
    /*max-width: 44rem;*/
  }
  .wishlist-inspire__icon button {
    background: none;
    border: none;
    padding: 0;
    margin: 0;
    cursor: pointer;
    display: flex;
    gap: 0.5rem;
    align-items: center;
  }
  .wishlist-inspire__icon--svg {
    width: 2rem;
    height: 2rem;
  }
</style>

{% schema %}
{
  "name": "Badge App",
  "target": "section",
  "settings": [
    { "type": "product", "id": "product", "label": "product", "autofill": true },
    {
      "type": "text",
      "id": "text",
      "label": "Text",
      "default": "Add to wishlist"
    },
    { "type": "color", "id": "colour", "label": "Star Colour", "default": "#ff0000" }
  ]
}
{% endschema %}
